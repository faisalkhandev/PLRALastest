# Generated by Django 4.2.3 on 2023-11-16 07:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import employee_basic_information.manager
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Center',
            fields=[
                ('c_rec_id', models.AutoField(primary_key=True, serialize=False)),
                ('center_id', models.CharField(max_length=50, unique=True)),
                ('center_name', models.CharField(max_length=100)),
                ('la_mapping', models.CharField(blank=True, max_length=100)),
                ('rr_mapping', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('district_rec_id', models.AutoField(primary_key=True, serialize=False)),
                ('district_id', models.CharField(max_length=50, unique=True)),
                ('district_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Employee_Title',
            fields=[
                ('e_t_rec_id', models.AutoField(primary_key=True, serialize=False)),
                ('employee_title', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('j_rec_id', models.AutoField(primary_key=True, serialize=False)),
                ('job_id', models.CharField(blank=True, max_length=50, unique=True)),
                ('job_title', models.CharField(max_length=255)),
                ('job_abbrivation', models.CharField(max_length=50, null=True)),
                ('no_of_seniority_level', models.IntegerField(default=1, null=True)),
                ('full_time_equivalent', models.CharField(default=1.0, max_length=255)),
                ('maximum_number_of_positions', models.CharField(default='UNLIMITED', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='JobLevel',
            fields=[
                ('j_l_rec_id', models.AutoField(primary_key=True, serialize=False)),
                ('job_abbrivation', models.CharField(max_length=50, null=True)),
                ('job_abbrivation_seniority', models.IntegerField()),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee_basic_information.job')),
            ],
        ),
        migrations.CreateModel(
            name='Wing',
            fields=[
                ('w_rec_id', models.AutoField(primary_key=True, serialize=False)),
                ('wing_id', models.CharField(max_length=50, unique=True)),
                ('wing_name', models.CharField(max_length=255)),
                ('search_name', models.CharField(default='Client Services', max_length=255)),
                ('operating_unit_type', models.CharField(default='Department', max_length=255)),
            ],
            options={
                'permissions': [('can_read_wing_name', 'Can Read Wing Name')],
                'unique_together': {('wing_id', 'wing_name')},
            },
        ),
        migrations.CreateModel(
            name='Tehsil',
            fields=[
                ('t_rec_id', models.AutoField(primary_key=True, serialize=False)),
                ('t_id', models.CharField(max_length=50, unique=True)),
                ('t_name', models.CharField(max_length=100)),
                ('district', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='employee_basic_information.district')),
            ],
            options={
                'unique_together': {('t_id', 't_name')},
            },
        ),
        migrations.CreateModel(
            name='Sub_Wing',
            fields=[
                ('sw_rec_id', models.AutoField(primary_key=True, serialize=False)),
                ('sub_wind_id', models.CharField(max_length=50, unique=True)),
                ('sub_wing_name', models.CharField(max_length=100)),
                ('wing', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee_basic_information.wing')),
            ],
            options={
                'permissions': [('can_view_wing', 'Can View wing'), ('can_add_wing', 'Can Add wing'), ('can_change_wing', 'Can Change wing')],
                'unique_together': {('sub_wind_id', 'sub_wing_name')},
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('r_rec_id', models.AutoField(primary_key=True, serialize=False)),
                ('region_id', models.CharField(max_length=50, unique=True)),
                ('region_name', models.CharField(max_length=100)),
            ],
            options={
                'unique_together': {('region_id', 'region_name')},
            },
        ),
        migrations.CreateModel(
            name='Ppg_Level_Setup',
            fields=[
                ('ppg_rec_id', models.AutoField(primary_key=True, serialize=False)),
                ('ppg_level', models.CharField(max_length=50)),
                ('ppg_level_seniority', models.IntegerField()),
            ],
            options={
                'unique_together': {('ppg_level', 'ppg_level_seniority')},
            },
        ),
        migrations.CreateModel(
            name='PositionType',
            fields=[
                ('p_t_rec_id', models.AutoField(primary_key=True, serialize=False)),
                ('position_type_name', models.CharField(max_length=100)),
            ],
            options={
                'unique_together': {('p_t_rec_id', 'position_type_name')},
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('p_rec_id', models.AutoField(primary_key=True, serialize=False)),
                ('position_desc', models.CharField(blank=True, max_length=50, null=True)),
                ('position_id', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_position', models.IntegerField(default=1)),
                ('open_position', models.BooleanField(default=True)),
                ('position_active', models.BooleanField(default=True)),
                ('full_time_equivalent', models.CharField(blank=True, default=1.0, max_length=255, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee_basic_information.job')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee_basic_information.center')),
                ('position_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee_basic_information.positiontype')),
                ('sub_wing', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee_basic_information.sub_wing')),
                ('wing', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee_basic_information.wing')),
            ],
        ),
        migrations.AddField(
            model_name='job',
            name='ppg_level',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='employee_basic_information.ppg_level_setup'),
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('d_rec_id', models.AutoField(primary_key=True, serialize=False)),
                ('division_id', models.CharField(max_length=50, unique=True)),
                ('division_name', models.CharField(max_length=100)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee_basic_information.region')),
            ],
            options={
                'permissions': [('can_view_region', 'Can View region'), ('can_add_region', 'Can Add region'), ('can_change_region', 'Can Change region'), ('can_view_d_rec_id', 'Can View d_rec_id'), ('can_add_d_rec_id', 'Can Add d_rec_id'), ('can_change_d_rec_id', 'Can Change d_rec_id'), ('can_view_division_id', 'Can View division_id'), ('can_add_division_id', 'Can Add division_id'), ('can_change_division_id', 'Can Change division_id'), ('can_view_division_name', 'Can View division_name'), ('can_add_division_name', 'Can Add division_name'), ('can_change_division_name', 'Can Change division_name')],
                'unique_together': {('division_id', 'division_name')},
            },
        ),
        migrations.AddField(
            model_name='district',
            name='division',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee_basic_information.division'),
        ),
        migrations.AddField(
            model_name='center',
            name='district',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee_basic_information.district'),
        ),
        migrations.AddField(
            model_name='center',
            name='division',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee_basic_information.division'),
        ),
        migrations.AddField(
            model_name='center',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee_basic_information.region'),
        ),
        migrations.AddField(
            model_name='center',
            name='tehsil',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee_basic_information.tehsil'),
        ),
        migrations.CreateModel(
            name='ApprovalMatrix',
            fields=[
                ('a_m_rec_id', models.AutoField(primary_key=True, serialize=False)),
                ('counter_assigning_position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='counter_assigning_approval_matrix', to='employee_basic_information.position')),
                ('dg_admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='dg_Admin', to='employee_basic_information.position')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='approval_matrix', to='employee_basic_information.position')),
                ('reporting_position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='reporting_approval_matrix', to='employee_basic_information.position')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('employee_no', models.CharField(blank=True, max_length=50)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cnic', models.CharField(max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('father_name', models.CharField(max_length=50)),
                ('passport_number', models.CharField(max_length=50)),
                ('domicile_district', models.CharField(blank=True, max_length=50, null=True)),
                ('phoneNumber', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region='PK')),
                ('employee_image', models.ImageField(blank=True, null=True, upload_to='Images')),
                ('employee_cnic_image_front', models.ImageField(blank=True, null=True, upload_to='Images')),
                ('employee_cnic_image_back', models.ImageField(blank=True, null=True, upload_to='Images')),
                ('employee_domicile_image', models.ImageField(blank=True, null=True, upload_to='Images')),
                ('date_of_joining', models.DateField(blank=True, null=True)),
                ('service_duration', models.CharField(blank=True, max_length=100, null=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_basic_information.center')),
                ('counter_assigning_officer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='csoficer', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('position', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_basic_information.position')),
                ('reporting_officer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='roficer', to=settings.AUTH_USER_MODEL)),
                ('title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee_basic_information.employee_title')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', employee_basic_information.manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PositionAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_start', models.DateField()),
                ('assignment_end', models.DateField(blank=True, null=True)),
                ('primary_position', models.BooleanField(default=False)),
                ('months_in_position', models.PositiveIntegerField(blank=True, null=True)),
                ('active', models.BooleanField(default=False)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee_basic_information.position')),
            ],
            options={
                'unique_together': {('active', 'primary_position', 'employee')},
            },
        ),
        migrations.CreateModel(
            name='JobLevelValidity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validity', models.IntegerField()),
                ('job_level', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='employee_basic_information.joblevel')),
            ],
            options={
                'unique_together': {('job_level', 'validity')},
            },
        ),
        migrations.CreateModel(
            name='JobLevelAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_start', models.DateField()),
                ('assignment_end', models.DateField(blank=True, null=True)),
                ('months_in_position', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(default=False)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('job_level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employee_basic_information.joblevel')),
            ],
            options={
                'unique_together': {('employee', 'job_level')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='job',
            unique_together={('job_id', 'job_title')},
        ),
        migrations.AlterUniqueTogether(
            name='district',
            unique_together={('district_id', 'district_name')},
        ),
        migrations.AlterUniqueTogether(
            name='center',
            unique_together={('center_id', 'center_name')},
        ),
    ]
